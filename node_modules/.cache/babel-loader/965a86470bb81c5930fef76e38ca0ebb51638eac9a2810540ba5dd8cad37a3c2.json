{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext'; // ðŸ‘ˆ import context\nimport './CartPage.css';\nconst CartPage = () => {\n  _s();\n  const {\n    userId\n  } = useAuth(); // ðŸ‘ˆ use context\n  const [cart, setCart] = useState([]);\n  const [totalAmount, setTotalAmount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!userId) {\n      setError(\"No user ID provided. Please log in.\");\n      setLoading(false);\n      return;\n    }\n    const fetchCart = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/cart/${userId}`);\n        if (!response.ok) throw new Error('Failed to fetch cart');\n        const data = await response.json();\n        if (data && data.products) {\n          setCart(data.products);\n          const total = data.products.reduce((acc, item) => {\n            var _item$productId;\n            const price = ((_item$productId = item.productId) === null || _item$productId === void 0 ? void 0 : _item$productId.price) || 0;\n            return acc + price * item.quantity;\n          }, 0);\n          setTotalAmount(total);\n        } else {\n          setCart([]);\n          setTotalAmount(0);\n        }\n      } catch (error) {\n        console.error('Error fetching cart:', error);\n        setError('Could not fetch the cart. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCart();\n  }, [userId]);\n\n  // ... rest of the component remains unchanged ...\n};\n_s(CartPage, \"UHQEz71Ir70UIs8Hl2QuWrn7T1Q=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = CartPage;\nexport default CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","CartPage","_s","userId","cart","setCart","totalAmount","setTotalAmount","loading","setLoading","error","setError","navigate","fetchCart","response","fetch","ok","Error","data","json","products","total","reduce","acc","item","_item$productId","price","productId","quantity","console","_c","$RefreshReg$"],"sources":["C:/Users/bhaga/OneDrive/Documents/Web Technology/Project/Sample/grocery-store/frontend/src/pages/CartPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext'; // ðŸ‘ˆ import context\r\nimport './CartPage.css';\r\n\r\nconst CartPage = () => {\r\n  const { userId } = useAuth(); // ðŸ‘ˆ use context\r\n  const [cart, setCart] = useState([]);\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      setError(\"No user ID provided. Please log in.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchCart = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/cart/${userId}`);\r\n        if (!response.ok) throw new Error('Failed to fetch cart');\r\n\r\n        const data = await response.json();\r\n        if (data && data.products) {\r\n          setCart(data.products);\r\n          const total = data.products.reduce((acc, item) => {\r\n            const price = item.productId?.price || 0;\r\n            return acc + price * item.quantity;\r\n          }, 0);\r\n          setTotalAmount(total);\r\n        } else {\r\n          setCart([]);\r\n          setTotalAmount(0);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching cart:', error);\r\n        setError('Could not fetch the cart. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCart();\r\n  }, [userId]);\r\n\r\n  // ... rest of the component remains unchanged ...\r\n};\r\n\r\nexport default CartPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,wBAAwB,CAAC,CAAC;AAClD,OAAO,gBAAgB;AAEvB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGH,OAAO,CAAC,CAAC,CAAC,CAAC;EAC9B,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,MAAM,EAAE;MACXQ,QAAQ,CAAC,qCAAqC,CAAC;MAC/CF,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkCZ,MAAM,EAAE,CAAC;QACxE,IAAI,CAACW,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QAEzD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,IAAIA,IAAI,CAACE,QAAQ,EAAE;UACzBf,OAAO,CAACa,IAAI,CAACE,QAAQ,CAAC;UACtB,MAAMC,KAAK,GAAGH,IAAI,CAACE,QAAQ,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;YAAA,IAAAC,eAAA;YAChD,MAAMC,KAAK,GAAG,EAAAD,eAAA,GAAAD,IAAI,CAACG,SAAS,cAAAF,eAAA,uBAAdA,eAAA,CAAgBC,KAAK,KAAI,CAAC;YACxC,OAAOH,GAAG,GAAGG,KAAK,GAAGF,IAAI,CAACI,QAAQ;UACpC,CAAC,EAAE,CAAC,CAAC;UACLrB,cAAc,CAACc,KAAK,CAAC;QACvB,CAAC,MAAM;UACLhB,OAAO,CAAC,EAAE,CAAC;UACXE,cAAc,CAAC,CAAC,CAAC;QACnB;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdmB,OAAO,CAACnB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CC,QAAQ,CAAC,mDAAmD,CAAC;MAC/D,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;;EAEZ;AACF,CAAC;AAACD,EAAA,CA5CID,QAAQ;EAAA,QACOD,OAAO,EAKTD,WAAW;AAAA;AAAA+B,EAAA,GANxB7B,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}