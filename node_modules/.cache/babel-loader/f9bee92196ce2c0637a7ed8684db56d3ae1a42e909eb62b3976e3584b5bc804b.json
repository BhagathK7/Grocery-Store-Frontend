{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhaga\\\\OneDrive\\\\Documents\\\\Web Technology\\\\Project\\\\Sample\\\\grocery-store\\\\frontend\\\\src\\\\pages\\\\dashboard\\\\SettingsPage.js\",\n  _s = $RefreshSig$();\n// src/pages/dashboard/SettingsPage.js\nimport React from 'react';\nimport { useTheme } from '../../context/ThemeContext'; // Assuming you have a context for theme\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsPage = () => {\n  _s();\n  const {\n    theme,\n    toggleTheme\n  } = useTheme(); // Get theme and toggle function\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Theme:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 12\n        }, this), \" \", theme === 'light' ? 'Light' : 'Dark']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTheme,\n        children: \"Toggle Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsPage, \"Q4eAjrIZ0CuRuhycs6byifK2KBk=\", false, function () {\n  return [useTheme];\n});\n_c = SettingsPage;\nexport default SettingsPage;\nvar _c;\n$RefreshReg$(_c, \"SettingsPage\");","map":{"version":3,"names":["React","useTheme","jsxDEV","_jsxDEV","SettingsPage","_s","theme","toggleTheme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bhaga/OneDrive/Documents/Web Technology/Project/Sample/grocery-store/frontend/src/pages/dashboard/SettingsPage.js"],"sourcesContent":["// src/pages/dashboard/SettingsPage.js\r\nimport React from 'react';\r\nimport { useTheme } from '../../context/ThemeContext'; // Assuming you have a context for theme\r\n\r\nconst SettingsPage = () => {\r\n  const { theme, toggleTheme } = useTheme(); // Get theme and toggle function\r\n\r\n  return (\r\n    <div className=\"settings-page\">\r\n      <h2>Settings</h2>\r\n      <div className=\"theme-toggle\">\r\n        <p><strong>Current Theme:</strong> {theme === 'light' ? 'Light' : 'Dark'}</p>\r\n        <button onClick={toggleTheme}>Toggle Theme</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,4BAA4B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE3C,oBACEE,OAAA;IAAKK,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BN,OAAA;MAAAM,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBV,OAAA;MAAKK,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BN,OAAA;QAAAM,QAAA,gBAAGN,OAAA;UAAAM,QAAA,EAAQ;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACP,KAAK,KAAK,OAAO,GAAG,OAAO,GAAG,MAAM;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7EV,OAAA;QAAQW,OAAO,EAAEP,WAAY;QAAAE,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACR,EAAA,CAZID,YAAY;EAAA,QACeH,QAAQ;AAAA;AAAAc,EAAA,GADnCX,YAAY;AAclB,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}